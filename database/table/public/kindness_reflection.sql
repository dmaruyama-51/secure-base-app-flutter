CREATE TABLE public.kindness_reflections (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  reflection_type_id bigint NULL,
  reflection_title text NULL,
  reflection_start_date date NULL,
  reflection_end_date date NULL,
  user_id uuid NULL DEFAULT gen_random_uuid(),
  CONSTRAINT kindness_reflections_pkey PRIMARY KEY (id),
  CONSTRAINT kindness_reflections_reflection_type_id_fkey FOREIGN KEY (reflection_type_id) REFERENCES reflection_type_master(id),
  CONSTRAINT kindness_reflections_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)
);

comment on table public.kindness_reflections is 'リフレクション情報を保持';

comment on column kindness_reflections.id is '関係性ID';
comment on column kindness_reflections.created_at is '作成日';
comment on column kindness_reflections.reflection_type_id is 'リフレクションの種類ID（reflection_type_masterのid）';
comment on column kindness_reflections.reflection_title is 'リフレクションのタイトル';
comment on column kindness_reflections.reflection_start_date is 'リフレクション集計期間の開始日';
comment on column kindness_reflections.reflection_end_date is 'リフレクション集計期間の終了日';
comment on column kindness_reflections.user_id is 'ユーザーID（usersのid）';

-- RLSを有効化
ALTER TABLE kindness_reflections ENABLE ROW LEVEL SECURITY;

-- 認証済みユーザーは全てのリフレクションデータを読み取り可能
CREATE POLICY "Authenticated users can view all kindness_reflections data."
ON kindness_reflections FOR SELECT
TO authenticated
USING (true);